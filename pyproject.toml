[project]
name = "discord-mcp"
version = "0.0.1a1"
description = "Discord MCP server for AI-assisted Discord management (Alpha)"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
dependencies = [
    "mcp[cli]>=1.8.0",
    "discord.py>=2.3.2",
    "anthropic>=0.51.0",
    "prompt-toolkit>=3.0.51",
    "python-dotenv>=1.1.0",
    "pytest-asyncio>=0.23.0",
]

[project.scripts]
discord-mcp = "discord_mcp.server:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.8.0",
    "isort>=5.12.0",
    "ruff>=0.5.7",
    "mypy>=1.11.1",
    "pre-commit>=3.7.1",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["discord_mcp*"]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py310"
src = ["src", "cli", "tests"]

[tool.ruff.lint]
select = ["E9", "F63", "F7", "F82"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
ignore_missing_imports = true
allow_redefinition = true
explicit_package_bases = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "asyncio: mark test as an asyncio test",
]

[tool.pytest_asyncio]
mode = "auto"
